package sshOpt

func Validate(option string) bool {

	var validOptions = []string{"AddKeysToAgent",
		"AddressFamily",
		"BatchMode",
		"BindAddress",
		"CanonicalDomains",
		"CanonicalizeFallbackLocal",
		"CanonicalizeHostname",
		"CanonicalizeMaxDots",
		"CanonicalizePermittedCNAMEs",
		"CertificateFile",
		"ChallengeResponseAuthentication",
		"CheckHostIP",
		"Cipher",
		"Ciphers",
		"ClearAllForwardings",
		"Compression",
		"CompressionLevel",
		"ConnectionAttempts",
		"ConnectTimeout",
		"ControlMaster",
		"ControlPath",
		"ControlPersist",
		"DynamicForward",
		"EscapeChar",
		"ExitOnForwardFailure",
		"FingerprintHash",
		"ForwardAgent",
		"ForwardX11",
		"ForwardX11Timeout",
		"ForwardX11Trusted",
		"GatewayPorts",
		"GlobalKnownHostsFile",
		"GSSAPIAuthentication",
		"GSSAPIDelegateCredentials",
		"HashKnownHosts",
		"Host",
		"HostbasedAuthentication",
		"HostbasedKeyTypes",
		"HostKeyAlgorithms",
		"HostKeyAlias",
		"HostName",
		"IdentityFile",
		"IdentitiesOnly",
		"IPQoS",
		"KbdInteractiveAuthentication",
		"KbdInteractiveDevices",
		"KexAlgorithms",
		"LocalCommand",
		"LocalForward",
		"LogLevel",
		"MACs",
		"Match",
		"NoHostAuthenticationForLocalhost",
		"NumberOfPasswordPrompts",
		"PasswordAuthentication",
		"PermitLocalCommand",
		"PKCS11Provider",
		"Port",
		"PreferredAuthentications",
		"Protocol",
		"ProxyCommand",
		"ProxyUseFdpass",
		"PubkeyAcceptedKeyTypes",
		"PubkeyAuthentication",
		"RekeyLimit",
		"RemoteForward",
		"RequestTTY",
		"RhostsRSAAuthentication",
		"RSAAuthentication",
		"SendEnv",
		"ServerAliveInterval",
		"ServerAliveCountMax",
		"StreamLocalBindMask",
		"StreamLocalBindUnlink",
		"StrictHostKeyChecking",
		"TCPKeepAlive",
		"Tunnel",
		"TunnelDevice",
		"UpdateHostKeys",
		"UsePrivilegedPort",
		"User",
		"UserKnownHostsFile",
		"VerifyHostKeyDNS",
		"VisualHostKey",
		"XAuthLocation "}

	for _, v := range validOptions {
		if v == option {
			return true
		}
	}
	return false
}
